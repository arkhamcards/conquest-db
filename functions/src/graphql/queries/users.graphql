 mutation createUser($id: String!) {
  insert_conquest_users_one(
    object: {
      id: $id
    }
    on_conflict: {
      constraint: users_pkey
      update_columns: []
    }
  ) {
    id
  }
  insert_conquest_user_settings_one(
    object: {
      user_id: $id
    }
    on_conflict: {
      constraint: user_settings_pkey
      update_columns: []
    }
  ) {
    user_id
  }
}

query getUser(
  $id: String!
) {
  conquest_users_by_pk(id: $id){
    id
    handle
    normalized_handle
  }
}


query getUserByHandle(
  $handle: String!
) {
  conquest_users(
    where: { handle: { _eq: $handle } }
  ) {
    id
  }
}

query getUserByNormalizedHandle(
  $normalizedHandle: String!
) {
  conquest_users(
    where: { normalized_handle: { _eq: $normalizedHandle } }
  ) {
    id
  }
}

query getProfile(
  $id: String!
) {
  conquest_users_by_pk(id: $id) {
    id
  }
}

mutation deleteUser($id: String!) {
  delete_conquest_users(where: {id: {_eq: $id}}) {
    affected_rows
  }
}

mutation updateHandle($userId:String!, $handle: String!, $normalizedHandle: String!) {
  update_conquest_users_by_pk(
    pk_columns: { id: $userId }
    _set: {
      handle: $handle,
      normalized_handle: $normalizedHandle
    }
  ) {
    id
    handle
    normalized_handle
  }
}

query searchHandles(
  $normalizedHandle: String!,
  $normalizedHandleStart: String!,
  $offset: Int
) {
  startMatch: conquest_users(
    where: {
			normalized_handle: { _ilike: $normalizedHandleStart }
    }
    limit: 20
    offset: $offset
  ) {
    id
    handle
  }
  looseMatch: conquest_users(
    where: {
			normalized_handle: { _ilike: $normalizedHandle }
    }
    limit: 20
    offset: $offset
  ) {
    id
    handle
  }
}
