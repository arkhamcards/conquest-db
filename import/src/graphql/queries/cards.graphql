fragment Card on conquest_card {
  id
  name
  traits
  text
  flavor

  quantity
  type_id
  faction_id
  loyalty_id
  type_id
  back_card_id
  imagesrc
  illustrator
  pack_id
  position

  cost
  command_hammers
  attack
  health
  shields
  unique
  preparation
  signature_id
  keywords
  back_traits
  back_text
  back_attack
  back_health
  tts_sheet_url
  tts_sheet_position
}

fragment CardText on conquest_card_text {
  id
  locale
  name
  traits
  text
  flavor
  imagesrc
  back_traits
  back_text
  keywords
}

fragment CardLoyalty on conquest_loyalty {
  id
  name
}

fragment CardLoyaltyText on conquest_loyalty_text {
  id
  locale
  name
}

fragment CardFaction on conquest_faction {
  id
  name
}


fragment CardFactionText on conquest_faction_text {
  id
  locale
  name
}

fragment CardType on conquest_type {
  id
  name
}

fragment CardTypeText on conquest_type_text {
  id
  locale
  name
}


fragment CardPack on conquest_pack {
  id
  name
  position
}

fragment CardPackText on conquest_pack_text {
  id
  locale
  name
}


query getCards {
  conquest_card {
    ...Card
  }
  conquest_card_text(
    where: { locale: { _eq: "en" }}
  ) {
    ...CardText
  }
}

query getMetadata {
  conquest_faction {
    ...CardFaction
  }
  conquest_loyalty {
    ...CardLoyalty
  }
  conquest_pack {
    ...CardPack
  }
  conquest_type {
    ...CardType
  }
}

query getTranslations($locale: String!) {
  conquest_card_text(where: {
    locale: { _eq: $locale }
  }) {
    ...CardText
  }
}

mutation upsertCard(
  $id: String!,
  $cost: Int,
  $back_card_id: String
  $name: String,
  $text: String,
  $traits: String,
  $flavor: String,
  $illustrator: String,
  $type_id: String,
  $faction_id: String,
  $loyalty_id: String,
  $pack_id: String,
  $command_hammers: Int,
  $attack: Int,
  $health: Int,
  $shields: Int,
  $unique: Boolean,
  $preparation: Boolean,
  $quantity: Int,
  $position: Int,
  $imagesrc: String
  $signature_id: Int,
  $back_attack: Int,
  $back_health: Int,
  $back_traits: String,
  $keywords: String,

  $tts_sheet_url: String,
  $tts_sheet_position: Int,
) {
	insert_conquest_card_one(
    object: {
      id: $id
      cost: $cost
      back_card_id: $back_card_id
      name: $name
      text: $text
      traits: $traits
      flavor: $flavor
      illustrator: $illustrator
      type_id: $type_id
      faction_id: $faction_id
      loyalty_id: $loyalty_id
      pack_id: $pack_id
      command_hammers: $command_hammers
      attack: $attack
      health: $health
      shields: $shields
      unique: $unique
      preparation: $preparation
      quantity: $quantity
      position: $position
      imagesrc: $imagesrc
      signature_id: $signature_id
      back_attack: $back_attack
      back_health: $back_health
      back_traits: $back_traits
      keywords: $keywords

      tts_sheet_url: $tts_sheet_url
      tts_sheet_position: $tts_sheet_position
    }
    on_conflict: {
      constraint: card_pkey
      update_columns: [
        id,
        cost,
        back_card_id,
        name,
        text,
        traits,
        flavor,
        illustrator,
        type_id,
        faction_id,
        loyalty_id,
        pack_id,
        command_hammers,
        attack,
        health,
        shields,
        unique,
        preparation,
        quantity,
        position,
        imagesrc,
        signature_id,
        back_attack,
        back_health,
        back_traits,
        keywords,
        tts_sheet_url,
        tts_sheet_position
      ]
    }
  ) {
    id
  }
}

mutation upsertCardLoyalty(
  $id: String!,
  $name: String!,
) {
  insert_conquest_loyalty_one(
    object: {
      id: $id
      name: $name
    }
    on_conflict: {
      constraint: loyalty_pkey
      update_columns: [
        id,
        name
      ]
    }
  ) {
    ...CardLoyalty
  }
}

mutation upsertCardLoyaltyText(
  $id: String!,
  $locale: String!,
  $name: String!
) {
  insert_conquest_loyalty_text_one(
    object: {
      id: $id
      locale: $locale
      name: $name
    }
    on_conflict: {
      constraint: loyalty_text_pkey
      update_columns: [
        id,
        name
      ]
    }
  ) {
    ...CardLoyaltyText
  }
}



mutation upsertCardFaction(
  $id: String!,
  $name: String!
) {
  insert_conquest_faction_one(
    object: {
      id: $id
      name: $name
    }
    on_conflict: {
      constraint: faction_pkey
      update_columns: [
        id,
        name
      ]
    }
  ) {
    ...CardFaction
  }
}

mutation upsertCardFactionText(
  $id: String!,
  $locale: String!,
  $name: String!
) {
  insert_conquest_faction_text_one(
    object: {
      id: $id
      locale: $locale
      name: $name
    }
    on_conflict: {
      constraint: faction_text_pkey
      update_columns: [
        id,
        name
      ]
    }
  ) {
    ...CardFactionText
  }
}

query getLocaleText(
  $locale: String!
) {
  conquest_faction_text(
    where: { locale: { _eq: $locale }}
  ){
    ...CardFactionText
  }
  conquest_loyalty_text(
    where: { locale: { _eq: $locale }}
  ) {
    ...CardLoyaltyText
  }
  conquest_pack_text(
    where: { locale: { _eq: $locale }}
  ) {
    ...CardPackText
  }
  conquest_type_text(
    where: { locale: { _eq: $locale }}
  ) {
    ...CardTypeText
  }
  conquest_card_text(
    where: { locale: { _eq: $locale }}
  ) {
    ...CardText
  }
}

mutation upsertCardText(
  $id: String!,
  $locale: String!,
  $name: String,
  $traits: String,
  $text: String,
  $flavor: String,
  $imagesrc: String,
  $back_text: String,
  $back_traits: String,
  $keywords: String
) {
	insert_conquest_card_text_one(
    object: {
      id: $id
      locale: $locale
      name: $name
      text: $text
      traits: $traits
      flavor: $flavor
      imagesrc: $imagesrc
      back_text: $back_text
      back_traits: $back_traits
      keywords: $keywords
    }
    on_conflict: {
      constraint: card_text_pkey
      update_columns: [
        id,
        locale,
        name,
        text,
        traits,
        flavor,
        imagesrc,
        back_text,
        back_traits,
        keywords
      ]
    }
  ) {
    id
    locale
  }
}


mutation upsertCardPack(
  $id: String!,
  $name: String!,
  $position: Int!
) {
	insert_conquest_pack_one(
    object: {
      id: $id
      name: $name
      position: $position
    }
    on_conflict: {
      constraint: pack_pkey
      update_columns: [
        id,
        name,
        position
      ]
    }
  ) {
    id
    name
    position
  }
}

mutation upsertCardPackText(
  $id: String!,
  $locale: String!,
  $name: String
) {
	insert_conquest_pack_text_one(
    object: {
      id: $id
      locale: $locale
      name: $name
    }
    on_conflict: {
      constraint: pack_text_pkey
      update_columns: [
        id,
        locale,
        name
      ]
    }
  ) {
    id
    locale
    name
  }
}

mutation upsertCardType(
  $id: String!,
  $name: String!
) {
	insert_conquest_type_one(
    object: {
      id: $id
      name: $name
    }
    on_conflict: {
      constraint: type_pkey
      update_columns: [
        name
      ]
    }
  ) {
    id
    name
  }
}

mutation upsertCardTypeText(
  $id: String!,
  $locale: String!,
  $name: String!
) {
	insert_conquest_type_text_one(
    object: {
      id: $id
      name: $name
      locale: $locale
    }
    on_conflict: {
      constraint: type_text_pkey
      update_columns: [
        name
      ]
    }
  ) {
    id
    name
    locale
  }
}
